name: action test
on: [workflow_dispatch, workflow_call]

permissions: read-all

jobs:
  # prepare-matrix:
  #   name: Prepare Matrix
  #   runs-on: ubuntu-latest
  #   outputs:
  #     payload-pull-request: ${{ steps.create-pull-request-payload.outputs.payload }}
  #     payload-all: ${{steps.create-all-payload.outputs.payload}}
  #     payload-trunk-merge: ${{steps.create-trunk-merge-payload.outputs.payload}}
  #   steps:
  #     - name: Checkout trunk-action
  #       uses: actions/checkout@v3
  #       with:
  #         path: local-action
  #     - name: Create Matrix Variable Pull Request
  #       id: create-pull-request-payload
  #       run:
  #         echo
  #         "TEST_PULL_REQUEST_PAYLOAD"="$(<./local-action/action_tests/pull_request_test_payload.json)"
  #         >> $GITHUB_OUTPUT
  #     - name: Create Matrix Variable All
  #       id: create-all-payload
  #       run:
  #         echo "TEST_ALL_PAYLOAD"="$(<./local-action/action_tests/all_test_payload.json)" >>
  #         $GITHUB_OUTPUT
  #     - name: Create Matrix Variable Merge
  #       id: create-trunk-merge-payload
  #       run:
  #         echo
  #         "TEST_TRUNK_MERGE_PAYLOAD"="$(<./local-action/action_tests/trunk_merge_test_payload.json)"
  #         >> $GITHUB_OUTPUT
  #     - name: debug
  #       shell: bash
  #       run: |
  #         ls local-action
  #         pwd
  #         echo "$TEST_TRUNK_MERGE_PAYLOAD"
  #         echo "$TEST_PULL_REQUEST_PAYLOAD"
  #         echo "$TEST_TRUNK_MERGE_PAYLOAD"

  action_tests:
    # needs: prepare-matrix
    name: ${{ matrix.description }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - description: pull-request-action-test
            payload: |
              {
                "inputs": {
                    "payload": "{ trunkPath: \"./local-action/action-tests/trunk_shim.sh\", targetRefName: \"136/merge/\", targetCheckoutRef: \"refs/pull/136/merge/\", checkMode: \"pull_request\", trunkToken: \"fake-trunk-token\", pullRequest: { number: 136, head: { sha: \"69b531ac8f611e0ae73639ec606fbc23e8ead576\", ref: \"action-test-pr\" }, base: { sha: \"50039e906e0e53ce03b269e5e9e00879f4c6f05c\", ref: \"action-test\" } }, checkRunId: 14235603498, version: \"0.0.0\", githubToken:\"${{ github.token }}\", cache: true, cacheKey: \"trunk-check\", cachePath: \"~/.cache/trunk/tools/ruby\", trunkApiAddress: \"localhost-will-not-work:5021\", checkJobName: \"action-test/trunk-action/pull_request\", checkJobRunsOn: [\"self-hosted\", \"linux\", \"r6id2xlarge-org\"], checkWorkflowRunName: \"[action-test] Trunk Check Pull Request Mode\", targetCheckout: \"trunk-io/trunk-action\", concurrencyGroup: \"trunk-action/pull_request/136\", debug: true }"
                  }
              }
            # payload: ${{ needs.prepare-matrix.outputs.payload-pull-request }}
          - description: trunk-merge-action-test
            payload: |
              {
                "inputs": {
                    "payload": "{ trunkPath: \"./local-action/action-tests/trunk_shim.sh\", targetRefName: \"136/merge/\", targetCheckoutRef: \"refs/pull/136/merge/\", checkMode: \"pull_request\", trunkToken: \"fake-trunk-token\", pullRequest: { number: 136, head: { sha: \"69b531ac8f611e0ae73639ec606fbc23e8ead576\", ref: \"action-test-pr\" }, base: { sha: \"50039e906e0e53ce03b269e5e9e00879f4c6f05c\", ref: \"action-test\" } }, checkRunId: 14235603498, version: \"0.0.0\", githubToken:\"${{ github.token }}\", cache: true, cacheKey: \"trunk-check\", cachePath: \"~/.cache/trunk/tools/ruby\", trunkApiAddress: \"localhost-will-not-work:5021\", checkJobName: \"action-test/trunk-action/pull_request\", checkJobRunsOn: [\"self-hosted\", \"linux\", \"r6id2xlarge-org\"], checkWorkflowRunName: \"[action-test] Trunk Check Pull Request Mode\", targetCheckout: \"trunk-io/trunk-action\", concurrencyGroup: \"trunk-action/pull_request/136\", debug: true }"
                  }
              }
            # payload: ${{ needs.prepare-matrix.outputs.payload-all }}
          - description: all-action-test
            payload: |
              {
                "inputs": {
                    "payload": "{ trunkPath: \"./local-action/action-tests/trunk_shim.sh\", targetRefName: \"136/merge/\", targetCheckoutRef: \"refs/pull/136/merge/\", checkMode: \"pull_request\", trunkToken: \"fake-trunk-token\", pullRequest: { number: 136, head: { sha: \"69b531ac8f611e0ae73639ec606fbc23e8ead576\", ref: \"action-test-pr\" }, base: { sha: \"50039e906e0e53ce03b269e5e9e00879f4c6f05c\", ref: \"action-test\" } }, checkRunId: 14235603498, version: \"0.0.0\", githubToken:\"${{ github.token }}\", cache: true, cacheKey: \"trunk-check\", cachePath: \"~/.cache/trunk/tools/ruby\", trunkApiAddress: \"localhost-will-not-work:5021\", checkJobName: \"action-test/trunk-action/pull_request\", checkJobRunsOn: [\"self-hosted\", \"linux\", \"r6id2xlarge-org\"], checkWorkflowRunName: \"[action-test] Trunk Check Pull Request Mode\", targetCheckout: \"trunk-io/trunk-action\", concurrencyGroup: \"trunk-action/pull_request/136\", debug: true }"
                  }
              }
            # payload: ${{ needs.prepare-matrix.outputs.payload-trunk-merge }}

    steps:
      - name: Checkout trunk-action
        uses: actions/checkout@v3
        with:
          path: local-action

      - name: Craft TEST_GITHUB_EVENT_PATH
        shell: bash
        # GITHUB_EVENT_PATH is the env var of path to file on runner that contains full webhook payload.
        # we are replacing it with TEST_GITHUB_EVENT_PATH so we read our predefined payload for test cases.
        run: |
          TEST_GITHUB_EVENT_PATH=$(mktemp)
          cat >> $TEST_GITHUB_EVENT_PATH <<EOF
          ${{matrix.payload}}
          EOF
          echo "TEST_GITHUB_EVENT_PATH=TEST_GITHUB_EVENT_PATH" >>$GITHUB_ENV

      - name: Run trunk-action for ${{matrix.description}}
        id: trunk
        uses: ./local-action/
        with:
          check-mode: payload
        continue-on-error: true

      - name: debug
        shell: bash
        run: |
          ls local-action
          pwd
          ls
          echo "$INPUT_TRUNK_PATH"
          echo "${{matrix.payload}}"
          echo "${{matrix.description}}"
          ls ./local-action

      - name: Check for task failures
        shell: bash
        run: |
          cd local-action
          npm install
          ./action_tests/verify_trunk_execution_log.js
