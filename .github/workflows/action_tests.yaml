name: action_tests
on: [workflow_dispatch, workflow_call]

permissions: read-all

env:
  TMPDIR: /tmp/trunk-stub-tmp
  TRUNK_STUB_LOGS: /tmp/trunk-stub-logs.json

jobs:
  trunk_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: local-action

      - name: Set up test
        shell: bash
        run: ./local-action/action_tests/setup.sh src-repo repo-under-test

      - name: debug
        shell: bash
        run: echo $TEST_GITHUB_EVENT_PATH

      - name: Run trunk-action
        shell: bash
        run: |
          cd repo-under-test
          git checkout trunk-merge/of-feature-branch
          echo "EXPECTED_UPSTREAM=$(git rev-parse trunk-merge/of-feature-branch^1)" >>$GITHUB_ENV
          echo "EXPECTED_GITHUB_COMMIT=$(git rev-parse trunk-merge/of-feature-branch^2)" >>$GITHUB_ENV
          ../local-action/trunk_merge.sh
        env:
          INPUT_ARGUMENTS: ""
          INPUT_CHECK_RUN_ID: ""
          INPUT_DEBUG: ""
          INPUT_LABEL: ""
          TRUNK_PATH: ../local-action/action_tests/stub.js

      - name: Assert CLI calls
        shell: bash
        run: |
          cd local-action
          npm install
          ./action_tests/assert.js trunk-merge

  all-hold-the-line-new-series:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: local-action

      - name: Set up test
        shell: bash
        run: ./local-action/action_tests/setup.sh src-repo repo-under-test

      - name: Run trunk-action
        shell: bash
        run: |
          cd repo-under-test
          ../local-action/all.sh
        env:
          INPUT_ARGUMENTS: ""
          INPUT_CHECK_ALL_MODE: hold-the-line
          INPUT_DEBUG: ""
          INPUT_TRUNK_TOKEN: trunk-token
          INPUT_UPLOAD_SERIES: series-name
          INPUT_UPLOAD_ID: test-upload-id
          TRUNK_PATH: ../local-action/action_tests/stub.js
          STUB_GET_LATEST_RAW_OUTPUT_STDOUT: "Starting new series of check runs...\n"

      - name: Assert CLI calls
        shell: bash
        run: |
          cd local-action
          npm install
          ./action_tests/assert.js all-hold-the-line-new-series

  all-hold-the-line-existing-series:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: local-action

      - name: Set up test
        shell: bash
        run: |
          ./local-action/action_tests/setup.sh src-repo repo-under-test
          cd repo-under-test
          echo "EXPECTED_UPSTREAM=$(git rev-parse main^)" >>$GITHUB_ENV

      - name: Run trunk-action
        shell: bash
        run: |
          cd repo-under-test
          ../local-action/all.sh
        env:
          INPUT_ARGUMENTS: ""
          INPUT_CHECK_ALL_MODE: hold-the-line
          INPUT_DEBUG: ""
          INPUT_TRUNK_TOKEN: trunk-token
          INPUT_UPLOAD_SERIES: series-name
          INPUT_UPLOAD_ID: test-upload-id
          TRUNK_PATH: ../local-action/action_tests/stub.js
          STUB_GET_LATEST_RAW_OUTPUT_STDOUT: ${{ env.EXPECTED_UPSTREAM }}

      - name: Assert CLI calls
        shell: bash
        run: |
          cd local-action
          npm install
          ./action_tests/assert.js all-hold-the-line-existing-series

  all-hold-the-line-no-upload-id:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: local-action

      - name: Set up test
        shell: bash
        run: ./local-action/action_tests/setup.sh src-repo repo-under-test

      - name: Run trunk-action
        shell: bash
        run: |
          cd repo-under-test
          ../local-action/all.sh
        env:
          INPUT_ARGUMENTS: ""
          INPUT_CHECK_ALL_MODE: hold-the-line
          INPUT_DEBUG: ""
          INPUT_TRUNK_TOKEN: trunk-token
          INPUT_UPLOAD_SERIES: series-name
          TRUNK_PATH: ../local-action/action_tests/stub.js
          STUB_GET_LATEST_RAW_OUTPUT_STDOUT: "Starting new series of check runs...\n"

      - name: Assert CLI calls
        shell: bash
        run: |
          cd local-action
          npm install
          ./action_tests/assert.js all-hold-the-line-no-upload-id

  payload:
    name: ${{ matrix.description }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - description: pull-request
            payload: |
              {
                "inputs": {
                  "payload": "{\"trunkPath\": \"./local-action/action-tests/stub.js\", \"targetRefName\": \"136/merge/\", \"targetCheckoutRef\": \"refs/pull/136/merge/\", \"checkMode\": \"pull_request\", \"trunkToken\": \"fake-trunk-token\", \"pullRequest\": { \"number\": 136, \"head\": { \"sha\": \"69b531ac8f611e0ae73639ec606fbc23e8ead576\", \"ref\": \"action-test-pr\" }, \"base\": { \"sha\": \"50039e906e0e53ce03b269e5e9e00879f4c6f05c\", \"ref\": \"action-test\" } }, \"checkRunId\": 14235603498, \"version\": \"0.0.0\", \"githubToken\":\"${{ github.token }}\", \"cache\": true, \"cacheKey\": \"trunk-check\", \"cachePath\": \"~/.cache/trunk/tools/ruby\", \"trunkApiAddress\": \"localhost-will-not-work:5021\", \"checkJobName\": \"action-test/trunk-action/pull_request\", \"checkJobRunsOn\": [\"self-hosted\", \"linux\", \"r6id2xlarge-org\"], \"checkWorkflowRunName\": \"[action-test] Trunk Check Pull Request Mode\", \"concurrencyGroup\": \"trunk-action/pull_request/136\", \"debug\": true }"
                }
              }
          - description: trunk-merge
            payload: |
              {
                "inputs": {
                  "payload": "{ trunkPath: \"./local-action/action-tests/trunk_shim.sh\", targetRefName: \"trunk-merge-beta/action-test-pr-136\", targetCheckoutRef: \"refs/heads/trunk-merge-beta/action-test-pr-136\", checkMode: \"trunk_merge\", trunkToken: \"fake-trunk-token\", checkRunId: 14235603498, version: \"0.0.0\", githubToken:\"${{ github.token }}\", cache: true, cacheKey: \"trunk-check\", cachePath: \"~/.cache/trunk/tools/ruby\", trunkApiAddress: \"localhost-will-not-work:5021\", checkJobName: \"action-test/trunk-action/trunk_merge\", checkJobRunsOn: [\"self-hosted\", \"linux\", \"r6id2xlarge-org\"], checkWorkflowRunName: \"[action-test] Trunk Check Trunk Merge Mode\", targetCheckout: \"trunk-io/trunk-action\", concurrencyGroup: \"trunk-action/trunk_merge/trunk-merge-beta/action-test-pr-136\", debug: true }"
                }
              }
          - description: all
            payload: |
              {
                "inputs": {
                  "payload": "{ trunkPath: \"./local-action/action-tests/trunk_shim.sh\", targetRefName: \"main\", targetCheckoutRef: \"main\", checkMode: \"all\", trunkToken: \"fake-trunk-token\", version: \"0.0.0\", arguments: \"\" --replace\" : \"\"\" githubToken:\"${{ github.token }}\", cache: true, cacheKey: \"trunk-check\", cachePath: \"~/.cache/trunk/tools/ruby\", trunkApiAddress: \"localhost-will-not-work:5021\", checkJobName: \"action-test/trunk-action/all\", checkJobRunsOn: [\"self-hosted\", \"linux\", \"r6id2xlarge-org\"], checkWorkflowRunName: \"[action-test] Trunk Check All Mode\", targetCheckout: \"trunk-io/trunk-action\", concurrencyGroup: \"trunk-action/all/main\", checkAllMode: \"hold-the-line\", uploadSeries: \"main\", debug: true }"
                }
              }

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: local-action

      # - name: Set up test
      #   shell: bash
      #   run: ./local-action/action_tests/setup.sh src-repo repo-under-test

      - name: Craft TEST_GITHUB_EVENT_PATH
        shell: bash
        # GITHUB_EVENT_PATH is the env var of path to file on runner that contains full webhook payload.
        # we are replacing it with TEST_GITHUB_EVENT_PATH so we read our predefined payload for test cases.
        run: |
          mkdir -p ${{env.TMPDIR}}
          TEST_GITHUB_EVENT_PATH=$(mktemp ${{env.TMPDIR}}/payload-test.XXXXXXXXXX)
          cat >> $TEST_GITHUB_EVENT_PATH <<EOF
          ${{matrix.payload}}
          EOF
          echo "TEST_GITHUB_EVENT_PATH=$TEST_GITHUB_EVENT_PATH" >>$GITHUB_ENV

      - name: debug
        shell: bash
        run: echo $TEST_GITHUB_EVENT_PATH

      - name: Run trunk-action payload test for ${{matrix.description}}
        id: trunk
        uses: ./local-action/
        with:
          check-mode: payload
        continue-on-error: true

      - name: Assert CLI calls
        shell: bash
        run: |
          cd local-action
          npm install
          ./action_tests/assert.js ${{matrix.description}}-payload

      # - name: debug
      #   shell: bash
      #   run: |
      #     ls local-action
      #     pwd
      #     ls
      #     pwd
      #     ls ./local-action
      #     pwd

      # - name: Check for task failures
      #   shell: bash
      #   run: |
      #     cd local-action
      #     ls
      #     npm install
      #     ./action_tests/verify_trunk_execution_log.js
